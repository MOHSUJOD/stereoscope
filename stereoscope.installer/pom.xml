<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.stereokrauts</groupId>
    <artifactId>stereoscope.app</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <relativePath>../stereoscope.app/pom.xml</relativePath>
  </parent>
  <artifactId>stereoscope.installer</artifactId>
  <name>Stereoscope Installer</name>
  <packaging>jar</packaging>
  <properties>
    <staging.dir>${project.build.directory}/staging</staging.dir>
    <product.version>${project.version}</product.version>
    <product.1>win32.win32.x86</product.1>
    <product.2>linux.gtk.x86_64</product.2>
    <product.3>linux.gtk.x86</product.3>
    <product.4>macosx.cocoa.x86_64</product.4>
    <izpack-standalone.version>4.3.1</izpack-standalone.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.izpack</groupId>
      <artifactId>izpack-standalone-compiler</artifactId>
      <version>${izpack-standalone.version}</version>
      <optional>true</optional>
    </dependency>
    <!--
    <dependency><groupId>org.codehaus.plexus</groupId><artifactId>plexus-utils</artifactId><version>1.5.6</version></dependency>-->
  </dependencies>
  <build>
    <defaultGoal>package</defaultGoal>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.9</version>
        <executions>
          <execution>
            <id>copy-products</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.stereokrauts</groupId>
                  <artifactId>stereoscope.repository</artifactId>
                  <version>${product.version}</version>
                  <classifier>${product.1}</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${staging.dir}/${product.1}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.stereokrauts</groupId>
                  <artifactId>stereoscope.repository</artifactId>
                  <version>${product.version}</version>
                  <classifier>${product.2}</classifier>
                  <type>tar.gz</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${staging.dir}/${product.2}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.stereokrauts</groupId>
                  <artifactId>stereoscope.repository</artifactId>
                  <version>${product.version}</version>
                  <classifier>${product.3}</classifier>
                  <type>tar.gz</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${staging.dir}/${product.3}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.stereokrauts</groupId>
                  <artifactId>stereoscope.repository</artifactId>
                  <version>${product.version}</version>
                  <classifier>${product.4}</classifier>
                  <type>tar.gz</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${staging.dir}/${product.4}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-shared-resources</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <includeGroupIds>org.codehaus.izpack</includeGroupIds>
              <includeArtifacIds>izpack-standalone-compiler</includeArtifacIds>
              <classifier>izpack2exe</classifier>
              <type>zip</type>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>${staging.dir}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--  copy other checked resource into staging area, expected by install.xml -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <id>create-staging-area-product-1</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <copy todir="${staging.dir}/${product.1}">
                  <fileset dir="${basedir}/src/izpack"/>
                </copy>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <id>create-staging-area-product-2</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <copy todir="${staging.dir}/${product.2}">
                  <fileset dir="${basedir}/src/izpack"/>
                </copy>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <id>create-staging-area-product-3</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <copy todir="${staging.dir}/${product.3}">
                  <fileset dir="${basedir}/src/izpack"/>
                </copy>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <id>create-staging-area-product-4</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <copy todir="${staging.dir}/${product.4}">
                  <fileset dir="${basedir}/src/izpack"/>
                </copy>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--  prepare dependencies so that izpack jar tag to pickup at compile time -->
      <!--
        <plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.0</version><executions><execution><id>standard-installer</id><phase>process-resources</phase><goals><goal>copy-dependencies</goal></goals><configuration><stripVersion>true</stripVersion><excludeGroupIds>org.codehaus.izpack</excludeGroupIds>-->
      <!-- dont want standalone compiler -->
      <!--        <outputDirectory>${staging.dir}/dependency</outputDirectory></configuration></execution></executions></plugin>-->
      <!--  see install.xml to see how MyHelloPanel is used -->
      <plugin>
        <groupId>org.codehaus.izpack</groupId>
        <artifactId>izpack-maven-plugin</artifactId>
        <version>1.0-alpha-5</version>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.izpack</groupId>
            <artifactId>izpack-standalone-compiler</artifactId>
            <version>${izpack-standalone.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <!-- <customPanelDirectory>${staging.dir}</customPanelDirectory>-->
        </configuration>
        <executions>
          <execution>
            <id>standard-installer-product-1</id>
            <phase>package</phase>
            <goals>
              <goal>izpack</goal>
            </goals>
            <configuration>
              <izpackBasedir>${staging.dir}/${product.1}</izpackBasedir>
              <installerFile>${project.build.directory}/${project.build.finalName}-${product.1}.jar</installerFile>
            </configuration>
          </execution>
          <execution>
            <id>standard-installer-product-2</id>
            <phase>package</phase>
            <goals>
              <goal>izpack</goal>
            </goals>
            <configuration>
              <izpackBasedir>${staging.dir}/${product.2}</izpackBasedir>
              <installerFile>${project.build.directory}/${project.build.finalName}-${product.2}.jar</installerFile>
            </configuration>
          </execution>
          <execution>
            <id>standard-installer-product-3</id>
            <phase>package</phase>
            <goals>
              <goal>izpack</goal>
            </goals>
            <configuration>
              <izpackBasedir>${staging.dir}/${product.3}</izpackBasedir>
              <installerFile>${project.build.directory}/${project.build.finalName}-${product.3}.jar</installerFile>
            </configuration>
          </execution>
          <execution>
            <id>standard-installer-product-4</id>
            <phase>package</phase>
            <goals>
              <goal>izpack</goal>
            </goals>
            <configuration>
              <izpackBasedir>${staging.dir}/${product.4}</izpackBasedir>
              <installerFile>${project.build.directory}/${project.build.finalName}-${product.4}.jar</installerFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>izpack-exe-unix</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>IzPack-Platform-Executable</id>
                <phase>install</phase>
                <configuration>
                  <tasks>
                    <exec dir="${project.build.directory}" executable="python">
                      <arg value="${staging.dir}/izpack2exe/izpack2exe.py"/>
                      <arg value="--file=${project.build.finalName}-${product.1}.jar"/>
                      <arg value="--no-upx"/>
                      <arg value="--output=setup.exe"/>
                    </exec>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>